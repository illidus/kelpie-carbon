name: 🌊 Publish Kelp Carbon Tiles to GitHub Pages

on:
  # Trigger on push to main branch (when tiles are updated)
  push:
    branches: [ main ]
    paths: 
      - 'tiles/**'
      - 'scripts/publish_tiles.sh'
  
  # Allow manual triggering from Actions tab
  workflow_dispatch:
    inputs:
      force_update:
        description: 'Force update tiles even if no changes detected'
        required: false
        default: false
        type: boolean

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  publish-tiles:
    runs-on: ubuntu-latest
    
    steps:
    - name: 🛒 Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for gh-pages branch operations
        
    - name: 📊 Check tiles directory
      run: |
        if [ -d "tiles" ]; then
          echo "✅ Tiles directory found"
          echo "📦 Tiles size: $(du -sh tiles | cut -f1)"
          echo "📁 Tile count: $(find tiles -name "*.png" | wc -l) PNG files"
        else
          echo "❌ No tiles directory found - creating empty one for testing"
          mkdir -p tiles/0
          echo "This is a placeholder tile server" > tiles/index.txt
        fi
        
    - name: 🔧 Setup Git configuration
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"
        
    - name: 🚀 Make publish script executable
      run: chmod +x scripts/publish_tiles.sh
      
    - name: 🌊 Publish tiles to GitHub Pages
      run: |
        echo "🔄 Running tile publisher..."
        if [ "${{ github.event.inputs.force_update }}" = "true" ]; then
          echo "⚡ Force update requested"
        fi
        
        # Run the publish script
        bash scripts/publish_tiles.sh
        
    - name: 📝 Summary
      run: |
        echo "## 🌊 Kelp Carbon Tiles Published" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Tiles published to GitHub Pages successfully!**" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 📍 Tile Endpoint" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "https://${{ github.repository_owner }}.github.io/${{ github.event.repository.name }}/tiles/{z}/{x}/{y}.png" >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🗂 Details" >> $GITHUB_STEP_SUMMARY
        echo "- **Repository:** ${{ github.repository }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Trigger:** ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
        if [ -d "tiles" ]; then
          echo "- **Tiles:** $(find tiles -name "*.png" | wc -l) PNG files" >> $GITHUB_STEP_SUMMARY
          echo "- **Size:** $(du -sh tiles | cut -f1)" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "⏱️ *GitHub Pages may take a few minutes to update the live endpoint*" >> $GITHUB_STEP_SUMMARY 